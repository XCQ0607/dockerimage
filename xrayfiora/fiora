安装
环境准备#
要运行 Fiora, 你需要 Node.js(推荐 v14 LTS 版本), MongoDB 和 redis

安装 Node.js
官网 http://nodejs.cn/download/
更推荐使用 nvm 安装 Node.js
安装 nvm https://github.com/nvm-sh/nvm#install--update-script
通过 nvm 安装 Node.js https://github.com/nvm-sh/nvm#usage
安装 MongoDB
官网 https://docs.mongodb.com/manual/installation/#install-mongodb
安装 redis
官网 https://redis.io/topics/quickstart
推荐在 Linux 或者 MacOS 系统上运行

如何运行#
克隆项目到本地 git clone https://github.com/yinxin630/fiora.git -b master
确保安装了 yarn, 如果没有安装请执行 npm install -g yarn
安装项目依赖 yarn install
构建客户端代码 yarn build:web
配置 JwtSecret echo "JwtSecret=<string>" > .env2. 要将 <string> 替换为一个秘密文本
启动服务端 yarn start
使用浏览器打开 http://[ip地址]:[端口](比如 http://127.0.0.1:9200)
在后台运行#
使用 yarn start 运行服务端会在断开 ssh 连接后停止运行, 推荐使用 pm2 来运行

# 安装 pm2
npm install -g pm2

# 使用 pm2 运行 fiora
pm2 start yarn --name fiora -- start

# 查看 pm2 应用状态
pm2 ls

# 查看 pm2 fiora 日志
pm2 logs fiora
运行开发模式#
启动服务端 yarn dev:server
启动客户端 yarn dev:web
使用浏览器打开 http://localhost:8080
docker 运行#
首先安装 docker https://docs.docker.com/install/

直接从 DockerHub 镜像运行#
# 拉取 mongo
docker pull mongo

# 拉取 redis
docker pull redis

# 拉取 fiora
docker pull suisuijiang/fiora

# 创建虚拟网络
docker network create fiora-network

# 启动 mongodB
docker run --name fioradb -p 27017:27017 --network fiora-network mongo

# 启动 redis
docker run --name fioraredis -p 6379:6379 --network fiora-network redis

# 启动 fiora
docker run --name fiora -p 9200:9200 --network fiora-network -e Database=mongodb://fioradb:27017/fiora -e RedisHost=fioraredis suisuijiang/fiora
本地构建镜像运行#
克隆项目到本地 git clone https://github.com/yinxin630/fiora.git -b master
构建镜像 docker-compose build --no-cache --force-rm
运行 docker-compose up










配置
服务器配置 config/server.ts 客户端配置 config/client.ts

相比于直接修改配置文件, 推荐用环境变量来修改配置
在 fiora 根目录创建 .env 文件, 在里面填写 key=value 键值对(每行一个), 即可修改相应配置. 比如修改端口号 Port=8888

服务端配置#
修改服务端配置需要重启应用

Key	类型	默认值	描述
Host	string	your ip	服务端 host
Port	number	9200	服务端端口号
Database	string	mongodb://localhost:27017/fiora	mongoDB 数据库地址
RedisHost	string	localhost	redis 地址主机名
RedisPort	number	6379	redis 端口
JwtSecret	string	jwtSecret (推荐修改它来保证安全性)	jwt token 加密 secret
MaxGroupCount	number	3	用户最大可以创建的群组个数
AllowOrigin	string	null	允许的客户端 origin 列表, null 时允许所有 origin 连接, 多个值逗号分割
tokenExpiresTime	number	2592000000 (30 天)	登陆 token 过期时间
Administrator	string	''	管理员用户 id 列表, 多个值逗号分割
DisableRegister	boolean	false	禁止注册账号
DisableCreateGroup	boolean	false	禁止创建群组
ALIYUN_OSS	boolean	false	启用阿里云 OSS
ACCESS_KEY_ID	string	''	阿里云 OSS access key id. 参考: https://help.aliyun.com/document_detail/48699.html
ACCESS_KEY_SECRET	string	''	阿里云 OSS access key secret. 参考和 ACCESS_KEY_ID 相同
ROLE_ARN	string	''	阿里云 OSS RoleARN. 参考: https://help.aliyun.com/document_detail/28649.html
REGION	string	''	阿里云 OSS 地域. 例如: oss-cn-zhangjiakou
BUCKET	string	''	阿里云 OSS bucket 名称
ENDPOINT	string	''	阿里云 OSS 域名. 例如: cdn.suisuijiang.com
客户端配置#
修改客户端配置需要重新构建客户端

Key	类型	默认值	描述
Server	string	/	客户端要连接的服务端地址
MaxImageSize	number	3145728 (3MB)	客户端可以上传的最大图片大小
MaxBackgroundImageSize	number	5242880 (5MB)	客户端可以上传的最大背景图大小
MaxAvatarSize	number	1572864 (1.5MB)	客户端可以上传的最大头像图片大小
MaxFileSize	number	10485760 (10MB)	客户端可以上传的最大文件大小
DefaultTheme	string	cool	默认主题
Sound	string	default	默认通知音
TagColorMode	string	fixedColor	默认标签颜色模式
FrontendMonitorAppId	string	fixedColor	岳鹰监控 appId https://yueying.effirst.com/index
DisableDeleteMessage	boolean	false	禁止用户撤回消息